<?xml version="1.0"?>
<robot name="ae86_bot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Parameters -->
  <xacro:property name="base_length" value="0.6"/>
  <xacro:property name="base_width" value="0.4"/>
  <xacro:property name="base_height" value="0.15"/>

  <xacro:property name="wheel_radius" value="0.08"/>
  <xacro:property name="wheel_width" value="0.04"/>

  <xacro:property name="lidar_height" value="0.20"/>
  <xacro:property name="lidar_radius" value="0.04"/>

  <!-- Inertial helper macro -->
  <xacro:macro name="inertial_cylinder" params="mass radius length">
    <inertial>
      <mass value="${mass}"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="${0.5*mass*radius*radius}" ixy="0" ixz="0" iyy="${0.5*mass*radius*radius}" iyz="0" izz="${mass*(3*radius*radius+length*length)/12}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="inertial_box" params="mass x y z">
    <inertial>
      <mass value="${mass}"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="${mass*(y*y+z*z)/12}" ixy="0" ixz="0" iyy="${mass*(x*x+z*z)/12}" iyz="0" izz="${mass*(x*x+y*y)/12}"/>
    </inertial>
  </xacro:macro>

  <!-- Base link -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 ${2*wheel_radius + 0.01 + base_height/2}"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="gray">
        <color rgba="0.6 0.6 0.6 1"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 ${2*wheel_radius + 0.01 + base_height/2}"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    <xacro:inertial_box mass="5.0" x="${base_length}" y="${base_width}" z="${base_height}"/>
  </link>

  <!-- Wheel macro -->
  <xacro:macro name="wheel" params="name x y">
    <link name="${name}">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="black">
          <color rgba="0.1 0.1 0.1 1"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <xacro:inertial_cylinder mass="0.3" radius="${wheel_radius}" length="${wheel_width}"/>
    </link>

    <joint name="${name}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${name}"/>
      <origin xyz="${x} ${y} ${wheel_radius}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <!-- Wheels positions -->
  <xacro:property name="x_front" value="${ base_length/2 - 0.08 }"/>
  <xacro:property name="x_rear" value="${ -base_length/2 + 0.08 }"/>
  <xacro:property name="y_left" value="${ base_width/2 - wheel_width/2 }"/>
  <xacro:property name="y_right" value="${ -base_width/2 + wheel_width/2 }"/>

  <xacro:wheel name="front_left_wheel"  x="${x_front}" y="${y_left}"/>
  <xacro:wheel name="front_right_wheel" x="${x_front}" y="${y_right}"/>
  <xacro:wheel name="rear_left_wheel"   x="${x_rear}"  y="${y_left}"/>
  <xacro:wheel name="rear_right_wheel"  x="${x_rear}"  y="${y_right}"/>

  <!-- LiDAR link -->
  <link name="lidar_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${lidar_radius}" length="0.05"/>
      </geometry>
      <material name="blue">
        <color rgba="0.2 0.2 1.0 1"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="${lidar_radius}" length="0.05"/>
      </geometry>
    </collision>
    <xacro:inertial_cylinder mass="0.2" radius="${lidar_radius}" length="0.05"/>
  </link>

  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 ${base_height + lidar_height}" rpy="0 0 0"/>
  </joint>

  <!-- Base to world fixed joint for visualization convenience -->
  <link name="world"/>
  <joint name="world_to_base" type="fixed">
    <parent link="world"/>
    <child link="base_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

</robot>


